{"version":3,"sources":["components/GenerarCoordenadas.js","components/ScrollTop.js","App.js","serviceWorker.js","index.js"],"names":["initialPoly","lat","lng","defaultPoly","JSON","stringify","GenerarCoordenadas","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","poligonos","actual","color","nombre","texto","copiado","copiar","save_err","json_carga","cargar_json_visible","error_json_carga","center","deshacer","arrastrando","keys","changeColor","bind","assertThisInitialized","handleInputs","resetPoly","savePoly","handleUp","handleDown","refPolis","React","createRef","inherits","createClass","key","value","_this2","current","select","document","execCommand","blur","setState","setTimeout","dato","htmlStr","len","getLength","length","i","getAt","toUrlValue","_dato$i","replace","substring","_this3","_this$state","find","item","toLowerCase","nPoli","data","formatear","textToCopy","concat","toConsumableArray","forEach","parse","b","map","getBounds","ob1","ob2","subob1","subob2","longitudes","menor","mayor","latitudes","bounds","drawMap","_this4","e","_this5","target","defineProperty","name","_this6","_this$state2","_this7","slice","_this8","window","google","timeout","_this$state$center","maps","Map","getElementById","zoom","LatLng","styles","estilos","_this$state3","poligonos_guardados","setMap","poliActual","npoli","Polygon","paths","draggable","editable","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","addListener","contentString","infowindow","close","InfoWindow","setContent","setPosition","latLng","open","getPolygonCoords","tipo","getPath","_this8$state","undo","estado","event","_this9","filter","k","scrollTo","top","behavior","maxlat","Math","max","apply","maxlng","minlat","min","minlng","upright","downleft","LatLngBounds","extend","fitBounds","panToBounds","contenidoEnBlob","Blob","decodeURIComponent","encodeURI","type","extra_names","join","reader","FileReader","onload","save","createElement","href","result","download","clicEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","URL","webkitURL","revokeObjectURL","readAsDataURL","variable","_this10","_this$state4","_unused","error","Zones","Zone","dataParseada","Coordinates","Color","_this11","_this12","_this$state5","keyCode","which","objectSpread","_this13","_this$state6","react_default","a","className","onClick","toggle","onChange","placeholder","cargarJson","cleanJson","id","onKeyDown","onKeyUp","readOnly","ref","copyToClipboard","downloadJson","editPoli","style","background","title","delete","Component","ScrollTop","_getPrototypeOf2","_len","arguments","args","Array","_key","show","position","bottom","right","padding","borderRadius","zIndex","cursor","transition","handle","handleScroll","addEventListener","removeEventListener","scrollY","scrollTop","transform","App","components_ScrollTop","components_GenerarCoordenadas","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.760e3240.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/coords.css\";\r\nimport estilos from \"../jsons/estilosMapa.json\";\r\n\r\nvar initialPoly = [\r\n  { lat: -30.085215, lng: -58.439112 },\r\n  { lat: -30.085215, lng: -53.169667 },\r\n  { lat: -35.031419, lng: -53.169667 },\r\n  { lat: -35.031419, lng: -58.439112 }\r\n];\r\nvar defaultPoly = JSON.stringify(initialPoly, null, 2);\r\n\r\nexport class GenerarCoordenadas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      poligonos: [],\r\n      actual: initialPoly,\r\n      color: \"#ff0000\",\r\n      nombre: \"Initial\",\r\n      texto: defaultPoly,\r\n      copiado: false,\r\n      copiar: \"\",\r\n      save_err: false,\r\n      json_carga: \"\",\r\n      cargar_json_visible: false,\r\n      error_json_carga: false,\r\n      center: {\r\n        lat: -33.190363,\r\n        lng: -56.033073\r\n      },\r\n      deshacer: [],\r\n      arrastrando: false,\r\n      keys: {}\r\n    };\r\n\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.handleInputs = this.handleInputs.bind(this);\r\n    this.resetPoly = this.resetPoly.bind(this);\r\n    this.savePoly = this.savePoly.bind(this);\r\n    this.handleUp = this.handleUp.bind(this);\r\n    this.handleDown = this.handleDown.bind(this);\r\n    this.refPolis = React.createRef();\r\n  }\r\n\r\n  copyToClipboard() {\r\n    this.refPolis.current.select();\r\n    document.execCommand(\"copy\");\r\n    this.refPolis.current.blur();\r\n    this.setState({ copiado: true }, () => {\r\n      setTimeout(() => {\r\n        this.setState({ copiado: false });\r\n      }, 5000);\r\n    });\r\n  }\r\n\r\n  formatear(dato) {\r\n    var htmlStr = \"\";\r\n\r\n    var len = 0;\r\n    if (dato.getLength) {\r\n      len = dato.getLength();\r\n    } else {\r\n      len = dato.length;\r\n    }\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (dato.getLength) {\r\n        htmlStr += \"{\" + dato.getAt(i).toUrlValue(5) + \"}, \";\r\n      } else {\r\n        let { lat, lng } = dato[i];\r\n        htmlStr += \"{\" + lat + \",\" + lng + \"}, \";\r\n      }\r\n    }\r\n\r\n    htmlStr = htmlStr\r\n      .replace(/{/g, '{\"lat\":')\r\n      .replace(/,/g, `, \"lng\":`)\r\n      .replace(/, \"lng\": /g, \",\");\r\n\r\n    htmlStr = \"[\" + htmlStr.substring(0, htmlStr.length - 1) + \"]\";\r\n    return htmlStr;\r\n  }\r\n\r\n  savePoly() {\r\n    var { nombre, color, poligonos, actual, nombre } = this.state;\r\n\r\n    //  busco poligonos con el mismo nombre\r\n    var repetido = poligonos.find(\r\n      item => item.nombre.toLowerCase() == nombre.toLowerCase()\r\n    );\r\n    if (repetido || nombre == \"\") {\r\n      this.setState({\r\n        save_err: true\r\n      });\r\n\r\n      return null;\r\n    }\r\n\r\n    var nPoli = {\r\n      nombre,\r\n      color,\r\n      data: actual,\r\n      texto: this.formatear(actual)\r\n    };\r\n\r\n    var textToCopy = `{\"Zones\":[`;\r\n\r\n    [...poligonos, nPoli].forEach(item => {\r\n      textToCopy += `{\"Zone\":\"${item.nombre}\",\"Coordinates\":`;\r\n      textToCopy += this.formatear(item.data);\r\n      textToCopy += `,\"Color\":\"${item.color}\"`;\r\n      textToCopy += \"},\";\r\n    });\r\n\r\n    textToCopy = textToCopy.substring(0, textToCopy.length - 1) + \"]}\";\r\n    textToCopy = JSON.stringify(JSON.parse(textToCopy), null, 2);\r\n\r\n    // creo un nuevo poligono en el centro del mapa\r\n    var b = this.map.getBounds();\r\n    var ob1 = Object.keys(b)[0];\r\n    var ob2 = Object.keys(b)[1];\r\n    var subob1 = Object.keys(b[ob1])[0];\r\n    var subob2 = Object.keys(b[ob1])[1];\r\n\r\n    var longitudes = {\r\n      menor: b[ob2][subob1],\r\n      mayor: b[ob2][subob2]\r\n    };\r\n    var latitudes = {\r\n      menor: b[ob1][subob1],\r\n      mayor: b[ob1][subob2]\r\n    };\r\n\r\n    var center = {\r\n      lat: this.map.center.lat(),\r\n      lng: this.map.center.lng()\r\n    };\r\n    longitudes.mayor = longitudes.mayor - (longitudes.mayor - center.lng) * 0.5;\r\n    longitudes.menor = longitudes.menor - (longitudes.menor - center.lng) * 0.5;\r\n    latitudes.mayor = latitudes.mayor - (latitudes.mayor - center.lat) * 0.5;\r\n    latitudes.menor = latitudes.menor - (latitudes.menor - center.lat) * 0.5;\r\n\r\n    var bounds = [\r\n      { lat: latitudes.menor, lng: longitudes.mayor },\r\n      { lat: latitudes.menor, lng: longitudes.menor },\r\n      { lat: latitudes.mayor, lng: longitudes.menor },\r\n      { lat: latitudes.mayor, lng: longitudes.mayor }\r\n    ];\r\n\r\n    this.setState(\r\n      {\r\n        poligonos: [...poligonos, nPoli],\r\n        nombre: \"\",\r\n        color: \"#ff0000\",\r\n        texto: JSON.stringify(bounds, null, 2),\r\n        actual: bounds,\r\n        copiar: textToCopy,\r\n        save_err: false,\r\n        deshacer: []\r\n      },\r\n      () => {\r\n        this.drawMap();\r\n      }\r\n    );\r\n  }\r\n\r\n  resetPoly() {\r\n    var center = {\r\n      lat: this.map.center.lat(),\r\n      lng: this.map.center.lng()\r\n    };\r\n\r\n    var b = this.map.getBounds();\r\n    var ob1 = Object.keys(b)[0];\r\n    var ob2 = Object.keys(b)[1];\r\n    var subob1 = Object.keys(b[ob1])[0];\r\n    var subob2 = Object.keys(b[ob1])[1];\r\n\r\n    var longitudes = {\r\n      menor: b[ob2][subob1],\r\n      mayor: b[ob2][subob2]\r\n    };\r\n    var latitudes = {\r\n      menor: b[ob1][subob1],\r\n      mayor: b[ob1][subob2]\r\n    };\r\n\r\n    longitudes.mayor = longitudes.mayor - (longitudes.mayor - center.lng) * 0.5;\r\n    longitudes.menor = longitudes.menor - (longitudes.menor - center.lng) * 0.5;\r\n    latitudes.mayor = latitudes.mayor - (latitudes.mayor - center.lat) * 0.5;\r\n    latitudes.menor = latitudes.menor - (latitudes.menor - center.lat) * 0.5;\r\n\r\n    var bounds = [\r\n      { lat: latitudes.menor, lng: longitudes.mayor },\r\n      { lat: latitudes.menor, lng: longitudes.menor },\r\n      { lat: latitudes.mayor, lng: longitudes.menor },\r\n      { lat: latitudes.mayor, lng: longitudes.mayor }\r\n    ];\r\n\r\n    this.setState(\r\n      {\r\n        nombre: \"\",\r\n        color: \"#ff0000\",\r\n        texto: JSON.stringify(bounds, null, 2),\r\n        actual: bounds,\r\n        deshacer: []\r\n      },\r\n      () => {\r\n        this.drawMap();\r\n      }\r\n    );\r\n  }\r\n\r\n  changeColor(e) {\r\n    this.setState(\r\n      {\r\n        color: e.target.value\r\n      },\r\n      () => {\r\n        this.drawMap();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleInputs(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var textToCopy = `{\"Zones\":[`;\r\n    const { poligonos, actual } = this.state;\r\n    [\r\n      ...poligonos,\r\n      { data: actual, nombre: \"Initial\", color: \"#ff0000\" }\r\n    ].forEach(item => {\r\n      textToCopy += `{\"Zone\":\"${item.nombre}\",\"Coordinates\":`;\r\n      textToCopy += this.formatear(item.data);\r\n      textToCopy += `,\"Color\":\"${item.color}\"`;\r\n      textToCopy += \"},\";\r\n    });\r\n\r\n    this.setState({\r\n      copiar: textToCopy\r\n    });\r\n    this.drawMap();\r\n  }\r\n\r\n  undo() {\r\n    const { deshacer } = this.state;\r\n    this.setState(\r\n      {\r\n        actual: deshacer[deshacer.length - 1],\r\n        deshacer: [...deshacer.slice(0, -1)],\r\n        texto: JSON.stringify(deshacer[deshacer.length - 1])\r\n      },\r\n      () => {\r\n        this.drawMap();\r\n      }\r\n    );\r\n  }\r\n\r\n  drawMap() {\r\n    if (!window.google) {\r\n      this.timeout = setTimeout(() => {\r\n        this.drawMap();\r\n      }, 100);\r\n\r\n      return null;\r\n    }\r\n\r\n    const { lat, lng } = this.state.center;\r\n\r\n    if (!this.map) {\r\n      this.map = new window.google.maps.Map(\r\n        document.getElementById(\"map-container\"),\r\n        {\r\n          zoom: 6,\r\n          center: new window.google.maps.LatLng(lat, lng),\r\n          styles: estilos\r\n        }\r\n      );\r\n    }\r\n    const { actual, poligonos, color } = this.state;\r\n\r\n    if (this.poligonos_guardados) {\r\n      this.poligonos_guardados.forEach(item => {\r\n        item.setMap(null);\r\n      });\r\n    }\r\n    if (this.poliActual) {\r\n      this.poliActual.setMap(null);\r\n    }\r\n\r\n    const abrirVentana = (i, e) => {\r\n      var contentString = `<div class='googleCuadro'>${poligonos[i].nombre}</div>`;\r\n\r\n      if (this.infowindow) {\r\n        this.infowindow.close();\r\n      }\r\n      this.infowindow = new window.google.maps.InfoWindow();\r\n      this.infowindow.setContent(contentString);\r\n      this.infowindow.setPosition(e.latLng);\r\n      this.infowindow.open(this.map);\r\n    };\r\n\r\n    // const over = (i, e) => {\r\n    //   this.poligonos_guardados[i].setOptions({\r\n    //     strokeOpacity: 1,\r\n    //     fillOpacity: 0.55\r\n    //   });\r\n    // };\r\n    // const out = (i, e) => {\r\n    //   this.poligonos_guardados[i].setOptions({\r\n    //     strokeOpacity: 0.8,\r\n    //     fillOpacity: 0.35\r\n    //   });\r\n    // };\r\n\r\n    this.poligonos_guardados = poligonos.map((item, i) => {\r\n      var npoli = new window.google.maps.Polygon({\r\n        paths: item.data,\r\n        draggable: false,\r\n        editable: false,\r\n        strokeColor: item.color,\r\n        strokeOpacity: 0.58,\r\n        strokeWeight: 2,\r\n        fillColor: item.color,\r\n        fillOpacity: 0.15\r\n      });\r\n\r\n      npoli.setMap(this.map);\r\n\r\n      npoli.addListener(\"click\", abrirVentana.bind(this, i));\r\n\r\n      // window.google.maps.event.addListener(\r\n      //   npoli,\r\n      //   \"mouseover\",\r\n      //   over.bind(this, i)\r\n      // );\r\n      // window.google.maps.event.addListener(\r\n      //   npoli,\r\n      //   \"mouseout\",\r\n      //   out.bind(this, i)\r\n      // );\r\n\r\n      return npoli;\r\n    });\r\n\r\n    this.poliActual = new window.google.maps.Polygon({\r\n      paths: actual,\r\n      draggable: true,\r\n      editable: true,\r\n      strokeColor: color,\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: color,\r\n      fillOpacity: 0.35\r\n    });\r\n\r\n    this.poliActual.setMap(this.map);\r\n\r\n    const getPolygonCoords = tipo => {\r\n      var len = this.poliActual.getPath().getLength();\r\n      var htmlStr = \"\";\r\n      for (var i = 0; i < len; i++) {\r\n        htmlStr +=\r\n          \"{\" +\r\n          this.poliActual\r\n            .getPath()\r\n            .getAt(i)\r\n            .toUrlValue(5) +\r\n          \"}, \";\r\n      }\r\n\r\n      htmlStr = htmlStr\r\n        .replace(/{/g, '{\"lat\":')\r\n        .replace(/,/g, `, \"lng\":`)\r\n        .replace(/, \"lng\": /g, \",\");\r\n\r\n      htmlStr = \"[\" + htmlStr.substring(0, htmlStr.length - 1) + \"]\";\r\n\r\n      const { deshacer, texto } = this.state;\r\n      var undo = [];\r\n      if (deshacer.length < 8) {\r\n        undo = [...deshacer, JSON.parse(texto)];\r\n      } else {\r\n        undo = [...deshacer.slice(1), JSON.parse(texto)];\r\n      }\r\n\r\n      var estado = {\r\n        texto: JSON.stringify(JSON.parse(htmlStr), null, 2),\r\n        actual: JSON.parse(htmlStr),\r\n        deshacer: undo\r\n      };\r\n      if (tipo == \"dragstart\") {\r\n        estado.arrastrando = true;\r\n      } else if (tipo == \"dragend\") {\r\n        estado.arrastrando = false;\r\n      }\r\n\r\n      if ((this.state.arrastrando && tipo == \"setat\") || tipo == \"dragend\") {\r\n        estado.deshacer = deshacer;\r\n      }\r\n\r\n      this.setState(estado);\r\n    };\r\n\r\n    const changeCenter = () => {\r\n      this.setState({\r\n        center: {\r\n          lat: this.map.center.lat(),\r\n          lng: this.map.center.lng()\r\n        }\r\n      });\r\n    };\r\n\r\n    window.google.maps.event.addListener(\r\n      this.poliActual.getPath(),\r\n      \"insert_at\",\r\n      getPolygonCoords.bind(this, \"insertat\")\r\n    );\r\n    window.google.maps.event.addListener(\r\n      this.poliActual.getPath(),\r\n      \"set_at\",\r\n      getPolygonCoords.bind(this, \"setat\")\r\n    );\r\n    window.google.maps.event.addListener(\r\n      this.poliActual,\r\n      \"dragend\",\r\n      getPolygonCoords.bind(this, \"dragend\")\r\n    );\r\n    window.google.maps.event.addListener(\r\n      this.poliActual,\r\n      \"dragstart\",\r\n      getPolygonCoords.bind(this, \"dragstart\")\r\n    );\r\n\r\n    window.google.maps.event.addListener(\r\n      this.map,\r\n      \"bounds_changed\",\r\n      changeCenter.bind(this)\r\n    );\r\n\r\n    this.setState({\r\n      center: {\r\n        lat: this.map.center.lat(),\r\n        lng: this.map.center.lng()\r\n      }\r\n    });\r\n  }\r\n\r\n  editPoli(i) {\r\n    var { poligonos } = this.state;\r\n    var actual = poligonos[i].data;\r\n    var color = poligonos[i].color;\r\n    var nombre = poligonos[i].nombre;\r\n\r\n    this.setState(\r\n      {\r\n        actual,\r\n        nombre,\r\n        color,\r\n        poligonos: [...poligonos.filter((item, k) => k != i)],\r\n        texto: this.formatear(actual),\r\n        deshacer: []\r\n      },\r\n      () => {\r\n        this.map = null;\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        this.drawMap();\r\n\r\n        // centro el mapa en el poligono nuevo\r\n        var maxlat = Math.max.apply(null, [...actual.map(item => item.lat)]);\r\n        var maxlng = Math.max.apply(null, [...actual.map(item => item.lng)]);\r\n        var minlat = Math.min.apply(null, [...actual.map(item => item.lat)]);\r\n        var minlng = Math.min.apply(null, [...actual.map(item => item.lng)]);\r\n\r\n        var upright = new window.google.maps.LatLng(maxlat, maxlng);\r\n        var downleft = new window.google.maps.LatLng(minlat, minlng);\r\n        var bounds = new window.google.maps.LatLngBounds();\r\n        bounds.extend(upright);\r\n        bounds.extend(downleft);\r\n\r\n        this.map.fitBounds(bounds);\r\n        this.map.panToBounds(bounds);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadJson() {\r\n    var contenidoEnBlob = new Blob(\r\n      [decodeURIComponent(encodeURI(this.state.copiar))],\r\n      { type: \"application/json;charset=utf-8;\" }\r\n    );\r\n\r\n    const { poligonos } = this.state;\r\n    var nombre = \"Zones-\";\r\n    var extra_names = poligonos.map(item => item.nombre);\r\n    nombre += extra_names.join(\"_\");\r\n\r\n    var reader = new FileReader();\r\n    reader.onload = e => {\r\n      var save = document.createElement(\"a\");\r\n      save.href = e.target.result;\r\n      save.target = \"_blank\";\r\n      save.download = nombre + \".json\";\r\n      var clicEvent = new MouseEvent(\"click\", {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true\r\n      });\r\n      save.dispatchEvent(clicEvent);\r\n      (window.URL || window.webkitURL).revokeObjectURL(save.href);\r\n    };\r\n\r\n    reader.readAsDataURL(contenidoEnBlob);\r\n  }\r\n\r\n  toggle(variable) {\r\n    this.setState({\r\n      [variable]: !this.state[variable]\r\n    });\r\n  }\r\n\r\n  cargarJson() {\r\n    var { json_carga, poligonos } = this.state;\r\n    var data = null;\r\n\r\n    try {\r\n      data = JSON.parse(json_carga);\r\n    } catch {\r\n      this.setState({\r\n        error_json_carga: true\r\n      });\r\n      return null;\r\n    }\r\n\r\n    var error = false;\r\n    if (!(\"Zones\" in data)) {\r\n      this.setState({\r\n        error_json_carga: true\r\n      });\r\n      return null;\r\n    }\r\n\r\n    for (let i = 0; i < data.Zones.length; i++) {\r\n      if (\r\n        !\"Zone\" in data.Zones[i] ||\r\n        !\"Coordinates\" in data.Zones[i] ||\r\n        !\"Color\" in data.Zones[i]\r\n      ) {\r\n        error = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      this.setState({\r\n        error_json_carga: true\r\n      });\r\n      return null;\r\n    }\r\n\r\n    data.Zones.forEach(item => {\r\n      poligonos = poligonos.filter(\r\n        k => k.nombre.toLowerCase() != item.Zone.toLowerCase()\r\n      );\r\n    });\r\n\r\n    var dataParseada = data.Zones.map(item => {\r\n      var res = {\r\n        nombre: item.Zone,\r\n        data: item.Coordinates,\r\n        texto: this.formatear(item.Coordinates),\r\n        color: item.Color\r\n      };\r\n      return res;\r\n    });\r\n\r\n    var textToCopy = `{\"Zones\":[`;\r\n\r\n    [...poligonos, ...dataParseada].forEach(item => {\r\n      textToCopy += `{\"Zone\":\"${item.nombre}\",\"Coordinates\":`;\r\n      textToCopy += this.formatear(item.data);\r\n      textToCopy += `,\"Color\":\"${item.color}\"`;\r\n      textToCopy += \"},\";\r\n    });\r\n\r\n    textToCopy = textToCopy.substring(0, textToCopy.length - 1) + \"]}\";\r\n    textToCopy = JSON.stringify(JSON.parse(textToCopy), null, 2);\r\n\r\n    this.setState(\r\n      {\r\n        poligonos: [...poligonos, ...dataParseada],\r\n        cargar_json_visible: false,\r\n        json_carga: \"\",\r\n        copiar: textToCopy,\r\n        error_json_carga: false\r\n      },\r\n      () => {\r\n        this.drawMap();\r\n      }\r\n    );\r\n  }\r\n\r\n  cleanJson() {\r\n    this.setState({\r\n      json_carga: \"\"\r\n    });\r\n  }\r\n\r\n  delete(k) {\r\n    var textToCopy = `{\"Zones\":[`;\r\n    var poligonos = [...this.state.poligonos.filter((item, i) => i != k)];\r\n\r\n    poligonos.forEach(item => {\r\n      textToCopy += `{\"Zone\":\"${item.nombre}\",\"Coordinates\":`;\r\n      textToCopy += this.formatear(item.data);\r\n      textToCopy += `,\"Color\":\"${item.color}\"`;\r\n      textToCopy += \"},\";\r\n    });\r\n\r\n    textToCopy = textToCopy.substring(0, textToCopy.length - 1) + \"]}\";\r\n\r\n    this.setState(\r\n      {\r\n        poligonos,\r\n        copiar: textToCopy\r\n      },\r\n      () => {\r\n        this.drawMap();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleDown(e) {\r\n    const { deshacer, keys } = this.state;\r\n    if (e.keyCode != 90 && e.keyCode != 17 && e.which != 90 && e.which != 17) {\r\n      return null;\r\n    }\r\n    this.setState({ keys: { ...keys, [e.keyCode || e.which]: true } }, () => {\r\n      if (deshacer.length > 0) {\r\n        if (this.state.keys[17] && this.state.keys[90]) {\r\n          this.undo();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  handleUp(e) {\r\n    this.setState({\r\n      keys: { ...this.state.keys, [e.keyCode || e.which]: false }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      poligonos,\r\n      texto,\r\n      color,\r\n      nombre,\r\n      copiar,\r\n      copiado,\r\n      save_err,\r\n      cargar_json_visible,\r\n      json_carga,\r\n      error_json_carga,\r\n      deshacer\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"generar\">\r\n        {cargar_json_visible && (\r\n          <div className=\"modal\">\r\n            <div className=\"contenedor\">\r\n              <i\r\n                className=\"fas fa-times\"\r\n                onClick={this.toggle.bind(this, \"cargar_json_visible\")}\r\n              />\r\n              <div className=\"titulo\">Load JSON</div>\r\n              <div className=\"contenido\">\r\n                <textarea\r\n                  name=\"json_carga\"\r\n                  onChange={this.handleInputs}\r\n                  value={json_carga}\r\n                  placeholder=\"Paste JSON\"\r\n                />\r\n                <small>\r\n                  Paste a JSON to add it to the map, if there is already a zone\r\n                  with the same name as one in the JSON, it will get replaced.\r\n                </small>\r\n                {error_json_carga && (\r\n                  <p className=\"errJson\">JSON loaded is invalid.</p>\r\n                )}\r\n                <button onClick={this.cargarJson.bind(this)}>Load Json</button>\r\n                <button onClick={this.cleanJson.bind(this)}>Clean</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"titulo\">Generate Coordinates</div>\r\n        <div className=\"elemento seccion-mapa\">\r\n          <div className=\"titulo\">Map</div>\r\n          <div className=\"content\">\r\n            <div className=\"mapa\">\r\n              <div\r\n                id=\"map-container\"\r\n                onKeyDown={this.handleDown}\r\n                onKeyUp={this.handleUp}\r\n              />\r\n              {deshacer.length > 0 && (\r\n                <button className=\"desh\" onClick={this.undo.bind(this)}>\r\n                  Undo\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"elemento controles\">\r\n          <div className=\"titulo\">Controls</div>\r\n          <div className=\"content\">\r\n            {\" \"}\r\n            <label>\r\n              Zone name:{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                value={nombre}\r\n                onChange={this.handleInputs}\r\n              />\r\n            </label>\r\n            <label>\r\n              Select polygon color:\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                name=\"color\"\r\n                onChange={this.changeColor}\r\n              />\r\n            </label>\r\n            <label>\r\n              Current Polygon\r\n              <textarea value={texto} readOnly />\r\n            </label>\r\n            <div className=\"acciones\">\r\n              <button onClick={this.savePoly}>Save current polygon</button>\r\n              <button onClick={this.resetPoly}>Reset polygon</button>\r\n              <button onClick={this.toggle.bind(this, \"cargar_json_visible\")}>\r\n                Load JSON\r\n              </button>\r\n              {save_err && (\r\n                <p className=\"save_err\">\r\n                  Zone Name is empty or already in use.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {poligonos.length > 0 && (\r\n          <div className=\"elemento\">\r\n            <div className=\"titulo\">Zones</div>\r\n\r\n            <div className=\"content\">\r\n              <div className=\"poligonos\">\r\n                <textarea ref={this.refPolis} value={copiar} readOnly />\r\n                <div className=\"succ\" onClick={this.copyToClipboard.bind(this)}>\r\n                  Copy\r\n                </div>\r\n                <div className=\"succ\" onClick={this.downloadJson.bind(this)}>\r\n                  Download JSON\r\n                </div>\r\n                {copiado && (\r\n                  <span>\r\n                    Copied <i className=\"fas fa-clipboard-check\"></i>\r\n                  </span>\r\n                )}\r\n                <small>Only saved zones will be added to the final JSON</small>\r\n\r\n                <div className=\"botones\">\r\n                  <h2>Edit zones</h2>\r\n                  {poligonos.map((item, i) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        onClick={this.editPoli.bind(this, i)}\r\n                        className=\"poligono\"\r\n                        style={{ background: item.color }}\r\n                        title={`Edit zone ${item.nombre}`}\r\n                      >\r\n                        {item.nombre}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <h2>Delete zones</h2>\r\n                  {poligonos.map((item, i) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        onClick={this.delete.bind(this, i)}\r\n                        className=\"poligono\"\r\n                        style={{ background: item.color }}\r\n                        title={`Delete zone ${item.nombre}`}\r\n                      >\r\n                        {item.nombre}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerarCoordenadas;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ScrollTop extends Component {\r\n  state = {\r\n    show: false\r\n  };\r\n  styles = {\r\n    position: \"fixed\",\r\n    bottom: \"0.5em\",\r\n    right: \"0.5em\",\r\n    color: \"white\",\r\n    background: \"rgb(6, 127, 239)\",\r\n    padding: \"0.7em 1em\",\r\n    borderRadius: \"50%\",\r\n    zIndex: \"100\",\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.4s ease\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handle = this.handleScroll.bind(this);\r\n    window.addEventListener(\"scroll\", this.handle);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handle);\r\n  }\r\n\r\n  handleScroll() {\r\n    if (window.scrollY > 20 && !this.state.show) {\r\n      this.setState({\r\n        show: true\r\n      });\r\n    }\r\n    if (window.scrollY < 20 && this.state.show) {\r\n      this.setState({\r\n        show: false\r\n      });\r\n    }\r\n  }\r\n\r\n  scrollTop() {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"scrollTop\"\r\n        onClick={this.scrollTop.bind(this)}\r\n        style={{\r\n          ...this.styles,\r\n          transform: this.state.show ? \"\" : \"translateY(150%)\"\r\n        }}\r\n      >\r\n        <i className=\"fas fa-arrow-up\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollTop;\r\n","import React from \"react\";\nimport \"./css/main.css\";\nimport \"./css/bootstrap-grid.min.css\";\nimport GenerarCoordenadas from \"./components/GenerarCoordenadas\";\nimport ScrollTop from \"./components/ScrollTop\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScrollTop />\n      <GenerarCoordenadas />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}